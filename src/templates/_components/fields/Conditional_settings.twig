{# @var craft \craft\web\twig\variables\CraftVariable #}
{#
/**
 * Conditional Fields plugin for Craft CMS
 *
 * Conditional Field Settings
 *
 * @author    Billy Fagan
 * @copyright Copyright (c) 2020 Billy Fagan
 * @link      https://billyfagan.co.uk
 * @package   ConditionalFields
 * @since     0.0.1
 */
#}

{% import "_includes/forms" as forms %}

{% do view.registerAssetBundle("billythekid\\conditionalfields\\assetbundles\\conditionalfield\\ConditionalFieldAsset") %}

{% set fields = craft.app.fields.allFields %}
{% set availableFields = [] %}
{% set availableValues = [
  {'label': 'No Value (Empty)', 'value': 'empty'},
  {'label': 'Any Value', 'value' : 'not empty'},
  {'label': 'True / On / Checked', 'value': 'true'},
  {'label': 'False / Off / Unchecked', 'value': 'false'},
  {'label': 'Exactly this:', 'value': 'exactly'},
] %}

{% for field in fields %}
  {% if className(field) != "billythekid\\conditionalfields\\fields\\Conditional" %}
    {#<pre>#}
    {#{{ dump(field) }}#}
    {#</pre>#}
    {% set availableFields = availableFields | merge([{'label': field.name ~ " (" ~ className(field)|split('\\')|last|title ~ ")" , 'value':field.id}]) %}
  {% endif %}
{% endfor %}

<div class="field">

  <div class="heading">
    <label for="conditionalOnField">Condition</label>
    <div class="instructions">
      <p>If this field</p>
    </div>
  </div>
  {{ forms.select ({
    id: 'conditionalOnField',
    name: 'conditionalOnField',
    class: 'conditionalOnField',
    options: availableFields,
    value: field['conditionalOnField']}) }}
</div>

<div class="field">
  <div class="heading">
    <div class="instructions">
      <p>…has this value</p>
    </div>
  </div>
  {{ forms.select ({
    id: 'conditionalValue',
    name: 'conditionalValue',
    class: 'conditionalValue',
    options: availableValues,
    value: field['conditionalValue']}) }}

  {{ forms.text({
    id: 'exactlyValue',
    name: 'exactlyValue',
    class: 'exactlyValue',
    size: true,
    type: field['exactlyValue'] is not empty ? 'text' : 'hidden',
    value: field['exactlyValue']
  }) }}
</div>

<div class="field">
  <div class="heading">
    <div class="instructions">
      <p>…then</p>
    </div>
  </div>
  {{ forms.select ({
    id: 'conditionalShow',
    name: 'conditionalShow',
    options: [{"label":"Show", "value": "1"}, {"label":"Hide", "value": "0"}],
    value: field['conditionalShow']}) }}
</div>
<div class="field">
  <div class="heading">
    <div class="instructions">
      <p>…this field</p>
    </div>
  </div>
  {{ forms.select ({
    id: 'conditionalShowOrHideField',
    name: 'conditionalShowOrHideField',
    class: 'conditionalShowOrHideField',
    options: availableFields,
    value: field['conditionalShowOrHideField']}) }}
</div>

{% js %}
var conditionContainer = $("#billythekid-conditionalfields-fields-Conditional");

checkSelects();

conditionContainer.on("change", ".conditionalOnField select", checkSelects );

conditionContainer.on("change", ".conditionalValue select", function (changeEvent) {
  if ($(this).val() === "exactly") {
    conditionContainer.find('.exactlyValue').attr('type', 'text');
  } else {
    conditionContainer.find('.exactlyValue').attr('type', 'hidden');
  }
});

function checkSelects() {
  conditionContainer.find(".conditionalShowOrHideField select option").each(function () {
    $(this).prop('disabled', false);
    if ($(this).val() === conditionContainer.find(".conditionalOnField select").val()) {
      $(this).prop('disabled', true);
    }
  });

  if (conditionContainer.find(".conditionalShowOrHideField select").val() === null) {
    conditionContainer.find(".conditionalShowOrHideField select").val(conditionContainer.find(".conditionalShowOrHideField select option:not(:disabled)").first().val());
  }
}

{% endjs %}
